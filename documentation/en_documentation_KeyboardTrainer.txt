Models:
DataBase.cs - contains array of eng/rus words
GitUpdater.cs - logic to update program from git repository
•ThisVersion - current version of product
•NeedUpdate() - returns if new version exists in repository (checks update)
•Update() - checks update and if new update found, download new vesion and replaces current file to new version file
MLanguage.cs - enum languages
TypeLogic.cs - Logic of user's input
•ChrsLeft - characters that the user needs to enter to complete the round.
•Mistaked - an event that is invoked when the user enters the wrong character.
•SendChar (chr) - the method that should be called when the user presses a button on the keyboard, the string parameter chr is the character that the key pressed gives.
•NewRound (str_input) - a method for initializing a new round for typing a workout; the string parameter str_input is the characters that the user must enter from the keyboard to complete the round.
ConfigStorage.cs  - storage of config fiels
•Save() - serialize ConfigStorage object
•Load() - derialize ConfigStorage object
ViewModels:
AppUpdater.cs - update application
•Update() - updates using GitUpdater.cs
Loc.cs - localization of strings
•Translate(engOrRus) - translate string
•AddTranslate(eng, rus) - add translate for string
Statistics.cs class (KeyBoardTrainer/ViewModels/Statistics.cs) is used as parameters for events, fields:
•CharsLeft - a string field, the characters that the user needs to enter to complete the round.
•Mistakes - numeric field, the number of mistakes made by the user during this round.
•Speed ​​- numeric field, user dialing speed.
•Time - the amount of time that has passed since the start of the round. 
TextType.cs - uses TypeLogic.cs
•SendChar (chr) - informs the model that the button was pressed, chr - the character that is obtained when the button is pressed.
•NewRound (updateTime) - launches a new round with random characters (the characters depend on the language), updateTime - whether to update the start time of the round.
UserProgressSaver.cs - saves user progress
•SaveProgress() - save progress to file
•LoadProgress() - export progress from file